#!/bin/sh
# Author: Andrew Hills <ahills@ednos.net>
# Public Domain (see http://unlicense.org)

# SAVEFILES can have sed patterns to filter contents while saving
SAVEFILES='bookmark closed command config history queue search hsts'
# COPYFILES are always copied verbatim if present
COPYFILES='scripts.js style.js'

VERSION=3
for arg; do
  case "$arg" in
  -V) echo "browse-$VERSION" >&2; exit 1;;
  -P) echo "save: $SAVEFILES"; echo "copy: $COPYFILES"; exit 1;;
  esac
done

pn="`basename "$0"`"
config="${BROWSE_CFG:-$HOME/.browse}"
t="${BROWSE_DIR:-`mktemp -d -t $pn-XXXXXX`}"
echo "cwd=$t" >&2

export XDG_CONFIG_HOME="$t" XDG_CACHE_HOME="$t/cache" XDG_RUNTIME_DIR="$t"
mkdir -p "$XDG_CONFIG_HOME/vimb" "$XDG_CACHE_HOME"

# Configuration by program name
configfile="$config/$pn.cfg"
[ -f "$configfile" ] || configfile=
[ -n "$configfile" ] && mkdir -p "$config/$pn"

# Url selection:
# 1. Command line
# 2. ~/.browse/urls
# 3. $BROWSE_HOME
# 4. blank
url="$1"
[ -n "$1" ] && shift # Shift to pass the rest of the arguments to the browser
[ -n "$configfile" -a -z "$url" ] && \
    url="`sed -n 's/^url *= *\(.*\)$/\1/p' "$configfile"`"
[ -z "$url" ] && url="${BROWSE_HOME}"
echo "url=$url" >&2

# Restore persistent files
if [ -f "$configfile" ]; then
  for pfile in $SAVEFILES; do
    [ -f "$config/$pn/$pfile" ] && grep -q -w -e "^$pfile" "$configfile" && \
      cp "$config/$pn/$pfile" "$t/vimb/$pfile" && echo "loaded $pfile" >&2
  done

  for pfile in $COPYFILES; do
    [ -f "$config/$pn/$pfile" ] && \
      cp "$config/$pn/$pfile" "$t/vimb/$pfile" && echo "loaded $pfile" >&2
  done
fi

cd "$t"
tabbed -n "browse-$pn" -c \
  vimb -s "$@" -e > "$t/xid" 2> "$t/error.log" &
sleep 1

# Only one socket should be created, with the PID
ln -s "$t/vimb/socket/"* "$t/vimb.sock"

[ -n "$url" ] && echo ":o $url<CR>" | socat - unix-connect:"$t/vimb.sock"

wait; sleep 1

# Save persistent files
if [ -f "$configfile" ]; then
  for pfile in $SAVEFILES; do
    savepattern="`sed -n 's/^'"$pfile"' *= *\(.*\)$/\1/p' "$configfile"`"
    [ -z "$savepattern" ] && continue
    echo "save $pfile $savepattern"

    # Back up original
    [ -f "$config/$pn/$pfile" ] && mv -f "$config/$pn/$pfile" "$config/$pn/$pfile.bak"

    # Special keyword "all" means just copy the whole file
    if [ "$savepattern" = all ]; then
      cp "$t/vimb/$pfile" "$config/$pn/$pfile"
    else
      sed -n "${savepattern}p" "$t/vimb/$pfile" > "$config/$pn/$pfile" && \
        echo "saved $pfile" >&2
    fi
  done

  for pfile in $COPYFILES; do
    if [ -f "$t/vimb/$pfile" ]; then
      # Back up original
      [ -f "$config/$pn/$pfile" ] && mv -f "$config/$pn/$pfile" "$config/$pn/$pfile.bak"

      cp "$t/vimb/$pfile" "$config/$pn/$pfile" && echo "saved $pfile" >&2
    fi
  done
fi

[ -z "$BROWSE_DIR" ] && rm -rf "$t" # Only erase the working directory if we created it

